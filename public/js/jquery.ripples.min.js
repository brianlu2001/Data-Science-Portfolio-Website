/**
 * jQuery Ripples plugin v0.6.3 / https://github.com/sirxemic/jquery.ripples
 * MIT License
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("jquery")):"function"==typeof define&&define.amd?define(["jquery"],t):(e=e||self).jquery_ripples=t(e.jQuery)}(this,function(e){"use strict";function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}e=e&&e.hasOwnProperty("default")?e.default:e;var n=function(){function e(t,r,n,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.parent=t,this.canvas=r,this.config=n,this.running=!1,this.times=[],this.buffer=null,this.program=null,this.programs={},this.frameBuffers=[],this.textures=[],this.layer=i}var t,n,i;return t=e,(n=[{key:"init",value:function(){var e=this;this.canvas.width=this.parent.innerWidth(),this.canvas.height=this.parent.innerHeight(),this.gl=this.canvas.getContext("webgl")||this.canvas.getContext("experimental-webgl"),this.middle=Math.floor(this.canvas.width/2),this.middle2=Math.floor(this.canvas.height/2),this.max=Math.max(this.canvas.width,this.canvas.height),this.gl.viewport(0,0,this.canvas.width,this.canvas.height),this.gl.enable(this.gl.BLEND),this.gl.blendFunc(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA),this.config.interactive&&this.canvas.addEventListener("mousemove",function(t){e.dropAt(t.clientX,t.clientY,e.config.dropRadius,e.config.perturbance)}),this.config.interactive&&this.canvas.addEventListener("touchmove",function(t){for(var r=t.touches,n=0;n<r.length;n++){var i=r[n];e.dropAt(i.clientX,i.clientY,e.config.dropRadius,e.config.perturbance)}t.preventDefault()}),this.config.interactive&&this.canvas.addEventListener("touchstart",function(t){for(var r=t.touches,n=0;n<r.length;n++){var i=r[n];e.dropAt(i.clientX,i.clientY,e.config.dropRadius,e.config.perturbance)}t.preventDefault()}),this.setupShaders(),this.setupBuffers(),this.setupTextures(),this.setupFrameBuffers(),this.start()}},{key:"setupShaders",value:function(){var e=this,t=this.gl;this.programs.drop=this.createProgram(this.vertexShader(),this.dropFragmentShader()),this.programs.update=this.createProgram(this.vertexShader(),this.updateFragmentShader()),this.programs.render=this.createProgram(this.vertexShader(),this.renderFragmentShader()),Object.keys(this.programs).forEach(function(r){var n=e.programs[r];n.locations={},n.locations.position=t.getAttribLocation(n.id,"position"),n.locations.texture=t.getUniformLocation(n.id,"texture"),n.locations.canvas=t.getUniformLocation(n.id,"canvas"),n.locations.delta=t.getUniformLocation(n.id,"delta"),n.locations.perturbance=t.getUniformLocation(n.id,"perturbance"),n.locations.center=t.getUniformLocation(n.id,"center"),n.locations.radius=t.getUniformLocation(n.id,"radius")})}},{key:"createProgram",value:function(e,t){var r=this.gl,n=r.createProgram(),i=r.createShader(r.VERTEX_SHADER),o=r.createShader(r.FRAGMENT_SHADER);return r.shaderSource(i,e),r.compileShader(i),r.shaderSource(o,t),r.compileShader(o),r.attachShader(n,i),r.attachShader(n,o),r.linkProgram(n),r.useProgram(n),{id:n,vertex:i,fragment:o,locations:{}}}},{key:"setupBuffers",value:function(){var e=this.gl;this.buffer=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,this.buffer),e.bufferData(e.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,1,-1,1,1,-1,1]),e.STATIC_DRAW)}},{key:"setupTextures",value:function(){var e=this.gl;this.textures.push(e.createTexture()),this.textures.push(e.createTexture()),this.textures.push(e.createTexture()),e.bindTexture(e.TEXTURE_2D,this.textures[0]),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,this.canvas.width,this.canvas.height,0,e.RGBA,e.UNSIGNED_BYTE,null),e.bindTexture(e.TEXTURE_2D,this.textures[1]),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,this.canvas.width,this.canvas.height,0,e.RGBA,e.UNSIGNED_BYTE,null),e.bindTexture(e.TEXTURE_2D,this.textures[2]),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,this.canvas.width,this.canvas.height,0,e.RGBA,e.UNSIGNED_BYTE,null),this.textures.forEach(function(t){e.bindTexture(e.TEXTURE_2D,t),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)})}},{key:"setupFrameBuffers",value:function(){var e=this.gl;this.frameBuffers.push(e.createFramebuffer()),this.frameBuffers.push(e.createFramebuffer()),this.frameBuffers.push(e.createFramebuffer()),e.bindFramebuffer(e.FRAMEBUFFER,this.frameBuffers[0]),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,this.textures[0],0),e.bindFramebuffer(e.FRAMEBUFFER,this.frameBuffers[1]),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,this.textures[1],0),e.bindFramebuffer(e.FRAMEBUFFER,this.frameBuffers[2]),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,this.textures[2],0),e.bindFramebuffer(e.FRAMEBUFFER,null)}},{key:"start",value:function(){var e=this;this.running=!0,this.dropAtPointer(),function t(){e.running&&(e.step(),requestAnimationFrame(t))}()}},{key:"stop",value:function(){this.running=!1}},{key:"step",value:function(){var e=this.gl;e.bindBuffer(e.ARRAY_BUFFER,this.buffer),e.useProgram(this.programs.update.id),e.uniform1f(this.programs.update.locations.perturbance,this.config.perturbance),e.uniform2f(this.programs.update.locations.canvas,this.canvas.width,this.canvas.height),e.uniform1f(this.programs.update.locations.delta,1/60),e.enableVertexAttribArray(this.programs.update.locations.position),e.vertexAttribPointer(this.programs.update.locations.position,2,e.FLOAT,!1,0,0),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.textures[0]),e.uniform1i(this.programs.update.locations.texture,0),e.bindFramebuffer(e.FRAMEBUFFER,this.frameBuffers[1]),e.drawArrays(e.TRIANGLES,0,6),e.bindFramebuffer(e.FRAMEBUFFER,null),e.useProgram(this.programs.render.id),e.uniform2f(this.programs.render.locations.canvas,this.canvas.width,this.canvas.height),e.uniform1f(this.programs.render.locations.perturbance,this.config.perturbance),e.enableVertexAttribArray(this.programs.render.locations.position),e.vertexAttribPointer(this.programs.render.locations.position,2,e.FLOAT,!1,0,0),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.textures[1]),e.uniform1i(this.programs.render.locations.texture,0),e.drawArrays(e.TRIANGLES,0,6);var t=this.textures[0];this.textures[0]=this.textures[1],this.textures[1]=t;var r=this.frameBuffers[0];this.frameBuffers[0]=this.frameBuffers[1],this.frameBuffers[1]=r}},{key:"dropAt",value:function(e,t,r,n){var i=this.gl,o=this.parent.offset(),a=e-o.left,s=t-o.top;i.bindBuffer(i.ARRAY_BUFFER,this.buffer),i.useProgram(this.programs.drop.id),i.uniform1f(this.programs.drop.locations.perturbance,n),i.uniform2f(this.programs.drop.locations.center,a,s),i.uniform1f(this.programs.drop.locations.radius,r),i.uniform2f(this.programs.drop.locations.canvas,this.canvas.width,this.canvas.height),i.enableVertexAttribArray(this.programs.drop.locations.position),i.vertexAttribPointer(this.programs.drop.locations.position,2,i.FLOAT,!1,0,0),i.activeTexture(i.TEXTURE0),i.bindTexture(i.TEXTURE_2D,this.textures[0]),i.uniform1i(this.programs.drop.locations.texture,0),i.bindFramebuffer(i.FRAMEBUFFER,this.frameBuffers[1]),i.drawArrays(i.TRIANGLES,0,6),i.bindFramebuffer(i.FRAMEBUFFER,null);var l=this.textures[0];this.textures[0]=this.textures[1],this.textures[1]=l;var c=this.frameBuffers[0];this.frameBuffers[0]=this.frameBuffers[1],this.frameBuffers[1]=c}},{key:"dropAtPointer",value:function(){var e=this;this.config.automatic&&setInterval(function(){e.dropAt(e.middle+Math.random()*100-50,e.middle2+Math.random()*100-50,e.config.dropRadius,e.config.perturbance)},700)}},{key:"vertexShader",value:function(){return"attribute vec2 position;\n\n        void main() {\n          gl_Position = vec4(position, 0.0, 1.0);\n        }"}},{key:"dropFragmentShader",value:function(){return"precision mediump float;\n\n        uniform vec2 center;\n        uniform float radius;\n        uniform vec2 canvas;\n        uniform float perturbance;\n        uniform sampler2D texture;\n        \n        void main() {\n          vec2 coord = gl_FragCoord.xy;\n          float distance = length(coord - center);\n          \n          if (distance < radius) {\n            float distanceFromCenter = distance / radius;\n            float height = cos(distanceFromCenter * 3.14159) * 0.5 + 0.5;\n            gl_FragColor = texture2D(texture, coord / canvas) + vec4(0.0, height * perturbance, 0.0, 0.0);\n          } else {\n            gl_FragColor = texture2D(texture, coord / canvas);\n          }\n        }"}},{key:"updateFragmentShader",value:function(){return"precision mediump float;\n\n        uniform vec2 canvas;\n        uniform sampler2D texture;\n        uniform float delta;\n        uniform float perturbance;\n        \n        void main() {\n          vec2 coord = gl_FragCoord.xy;\n          \n          vec2 dx = vec2(1.0, 0.0) / canvas;\n          vec2 dy = vec2(0.0, 1.0) / canvas;\n          \n          float left = texture2D(texture, coord / canvas - dx).g;\n          float right = texture2D(texture, coord / canvas + dx).g;\n          float top = texture2D(texture, coord / canvas - dy).g;\n          float bottom = texture2D(texture, coord / canvas + dy).g;\n          \n          float previousHeight = texture2D(texture, coord / canvas).r;\n          float currentHeight = texture2D(texture, coord / canvas).g;\n          \n          float newHeight = ((left + right + top + bottom) * 0.25 - previousHeight) * 0.99;\n          \n          gl_FragColor = vec4(currentHeight, newHeight, 0.0, 1.0);\n        }"}},{key:"renderFragmentShader",value:function(){return"precision mediump float;\n\n        uniform vec2 canvas;\n        uniform sampler2D texture;\n        uniform float perturbance;\n        \n        void main() {\n          vec2 coord = gl_FragCoord.xy;\n          \n          vec2 dx = vec2(1.0, 0.0) / canvas;\n          vec2 dy = vec2(0.0, 1.0) / canvas;\n          \n          float left = texture2D(texture, coord / canvas - dx).g;\n          float right = texture2D(texture, coord / canvas + dx).g;\n          float top = texture2D(texture, coord / canvas - dy).g;\n          float bottom = texture2D(texture, coord / canvas + dy).g;\n          \n          vec2 offset = vec2(right - left, bottom - top) * perturbance;\n          \n          vec2 newCoord = coord / canvas + offset;\n          \n          gl_FragColor = texture2D(texture, newCoord);\n        }"}}])&&r(t.prototype,n),i&&r(t,i),e}();function i(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}e.fn.ripples=function(r){var o=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(t){var n,i,o;n=e,i=t,o=r[t],i in n?Object.defineProperty(n,i,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[i]=o})}return e}({resolution:256,dropRadius:20,perturbance:.03,interactive:!0,automatic:!1,crossOrigin:""},r),a=["destroy","drop","pause","play","set","show","hide","updateSize"];if("string"==typeof r&&a.indexOf(r)>=0){var s=Array.prototype.slice.call(arguments,1);return this.each(function(){var t=e(this),r=t.data("ripples");if(r){var n=r[arguments[0]];if("function"==typeof n)return n.apply(r,s)}})}return this.each(function(){var r=e(this),a=r.data("ripples");if(a)return a.updateOptions(o);var s=r.is("img"),l=s?r.attr("src"):r.css("background-image");if(l)if(s||"none"!==l){var c=e("<canvas>").css({position:"absolute",left:0,top:0,right:0,bottom:0,zIndex:-1});r.append(c);var u=function(){var e=o.crossOrigin;if(""!==e){var t=document.createElement("img");t.crossOrigin=e,t.src=l,t.onload=function(){var e=document.createElement("canvas"),r=e.getContext("2d");e.width=t.width,e.height=t.height,r.drawImage(t,0,0),c.css("background-image","url("+e.toDataURL()+")")}}};"string"==typeof l&&(l=l.replace(/url\(["']?([^"']*)["']?\)/,"$1")),s?r.css("background-image","url("+l+")"):(c.css("background-image",r.css("background-image")),c.css("background-size",r.css("background-size")),c.css("background-position",r.css("background-position")),c.css("background-repeat",r.css("background-repeat")),c.css("background-attachment",r.css("background-attachment")),c.css("background-origin",r.css("background-origin")),c.css("background-clip",r.css("background-clip")),c.css("background-color",r.css("background-color")),u()),r.css("background-image","none");var f=new n(r,c[0],o);f.init(),r.data("ripples",f)}})},e.fn.ripples.defaults={resolution:256,dropRadius:20,perturbance:.03,interactive:!0,automatic:!1,crossOrigin:""}});